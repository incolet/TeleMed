@page "/provider-login"
@using TeleMed.Components.Layout
@layout LoginLayout
@using TeleMed.DTOs.Auth

@rendermode InteractiveServer

<div class="container ">
    <div class="row justify-content-center">
        <div class=" d-flex justify-content-center mb-4">
            <img src="logo.png" width="277px" alt=""/>
        </div>
        <div class="col-md-6">
            <img src="landing.jpg" width="630px" alt="Landing"/>
        </div>
        <div class="col-md-6">
            <div class=" p-3 mb-5 bg-white rounded">
                <div class="card-body">
                    <Button Type="ButtonType.Link" To="/" class="w-100 py-2" Color="ButtonColor.Primary" Size="Size.Small">Patient Login</Button>

                    <div class=" d-flex gap-3 mt-4 mb-2">
                        <hr style="width: 400px" /> <p class="text-center">OR</p> <hr style="width: 400px"/>
                    </div>
                    <h3 class="fw-bold mb-2 fs-5">Provider Sign In</h3>
                    <EditForm Model="@Login" OnValidSubmit="LoginClicked">
                        <DataAnnotationsValidator/>
                        <div class="form-group mb-3">
                            <label for="emailInput" class="form-label">Email Address</label>
                            <InputText id="emailInput" @bind-Value="Login.Email" class="form-control" placeholder="Enter email"/>
                            <ValidationMessage For="@(() => Login.Email)" class="text-danger"/>
                        </div>
                        <div class="form-group mb-3">
                            <label for="passwordInput" class="form-label">Password</label>
                            <InputText id="passwordInput" @bind-Value="Login.Password" class="form-control" type="password" placeholder="Password"/>
                            <ValidationMessage For="@(() => Login.Password)" class="text-danger"/>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">@if (_spinnerVisible)
                            {
                            <Spinner Class="me-3 text-white" Type="SpinnerType.Dots" Color="SpinnerColor.Primary" Size="SpinnerSize.Large" Visible="@_spinnerVisible"/>
                            }
                            else
                            {
                            <span>Login</span>
                            }</button>
                    </EditForm>
                    @* <Spinner Class="me-3" Type="SpinnerType.Dots" Color="SpinnerColor.Primary" Size="SpinnerSize.Large" Visible="@_spinnerVisible"/> *@
                </div>

                @* <Button Type="ButtonType.Link" To="/" Color="ButtonColor.Primary" Size="Size.Small">Patient SignIn</Button> *@
            </div>
        </div>
    </div>
</div>




@code {
    public LoginDto Login { get; set; } = new ();
    private bool _spinnerVisible;
    private async void LoginClicked()
    {
        _spinnerVisible = true;
        Login.Role = (int)UserRoles.Provider;
        
        var response = await AccountsService.LoginAsync(Login);
        if (!response.Flag)
        {
            _spinnerVisible = false;

            await js.InvokeVoidAsync("alert", response.Message);
            
            return;
        }
        
        var customAuthStateProvider = (CustomAuthenticationStateProvider)AuthStateProvider;
        customAuthStateProvider.UpdateAuthenticationState(response.JWTToken);
        NavManager.NavigateTo("/provider-dashboard",forceLoad: true);
    }
}
